(()=>{"use strict";const e=document.getElementById("employee-form"),t=document.getElementById("name"),n=document.getElementById("department"),a=document.getElementById("salary"),d=document.getElementById("employees"),l=document.getElementById("update"),o=new class{constructor(e){this.url=e}async get(){const e=await fetch(this.url);return await e.json()}async post(e){const t=await fetch(this.url,{method:"POST",body:JSON.stringify(e),headers:{"Content-type":"application/json; charset=UTF-8"}});return await t.json()}async put(e,t){const n=await fetch(this.url+"/"+e,{method:"PUT",body:JSON.stringify(t),headers:{"Content-type":"application/json; charset=UTF-8"}});return await n.json()}async delete(e){return await fetch(this.url+"/"+e,{method:"DELETE"}),"Data successfully erased!"}}("http://localhost:3000/employees"),s=new class{constructor(){this.employeesList=document.getElementById("employees"),this.updateButton=document.getElementById("update"),this.nameInput=document.getElementById("name"),this.departmentInput=document.getElementById("department"),this.salaryInput=document.getElementById("salary")}deleteEmployeeFromUI(e){e.remove()}addAllEmployeesToUI(e){let t="";e.forEach((e=>{t+=`\n            <tr>\n            <td>${e.name}</td>\n            <td>${e.department}</td>\n            <td>${e.salary}</td>\n            <td>${e.id}</td>\n            <td><a href="#" id="update-employee" class="btn btn-danger">Update</a></td>\n            <td><a href="#" id="delete-employee" class="btn btn-danger">Delete</a></td>\n            </tr>\n            `})),this.employeesList.innerHTML=t}addEmployeeToUI(e){this.employeesList.innerHTML+=`\n        <tr>\n        <td>${e.name}</td>\n        <td>${e.department}</td>\n        <td>${e.salary}</td>\n        <td>${e.id}</td>\n        <td><a href="#" id="update-employee" class="btn btn-danger">Update</a></td>\n        <td><a href="#" id="delete-employee" class="btn btn-danger">Delete</a></td>\n        </tr>\n        `}clearInputs(){this.nameInput.value="",this.departmentInput.value="",this.salaryInput.value=""}toggleUpdateButton(e){"none"===this.updateButton.style.display?(this.updateButton.style.display="block",this.addEmployeeInfoToInputs(e)):(this.updateButton.style.display="none",this.clearInputs())}addEmployeeInfoToInputs(e){const t=e.children;this.nameInput.value=t[0].textContent,this.departmentInput.value=t[1].textContent,this.salaryInput.value=t[2].textContent}updateEmployeeOnUI(e,t){t.innerHTML+=`\n        <tr>\n        <td>${e.name}</td>\n        <td>${e.department}</td>\n        <td>${e.salary}</td>\n        <td>${e.id}</td>\n        <td><a href="#" id="update-employee" class="btn btn-danger">Update</a></td>\n        <td><a href="#" id="delete-employee" class="btn btn-danger">Delete</a></td>\n        </tr>\n        `}};let r=null;document.addEventListener("DOMContentLoaded",(function(){o.get().then((e=>{s.addAllEmployeesToUI(e)})).catch((e=>console.err(e)))})),e.addEventListener("submit",(function(e){const d=t.value.trim(),l=n.value.trim(),r=a.value.trim();o.post({name:d,department:l,salary:Number(r)}).then((e=>{s.addEmployeeToUI(e)})).catch((e=>console.error(e))),s.clearInputs(),e.preventDefault()})),d.addEventListener("click",(function(e){var t;"delete-employee"===e.target.id?function(e){const t=e.parentElement.previousElementSibling.previousElementSibling.textContent;o.delete(t).then((t=>{console.log(t),s.deleteEmployeeFromUI(e.parentElement.parentElement)})).catch((e=>console.error(e)))}(e.target):"update-employee"===e.target.id&&(t=e.target.parentElement.parentElement,s.toggleUpdateButton(t),r=null===r?{updateID:t.children[3].textContent,updateParent:t}:null)})),l.addEventListener("click",(function(){if(r){const e={name:t.value.trim(),department:n.value.trim(),salary:Number(a.value.trim())};o.put(r.updateID,e).then((e=>{s.updateEmployeeOnUI(e,r.updateParent)})).catch((e=>console.error(e)))}}))})();